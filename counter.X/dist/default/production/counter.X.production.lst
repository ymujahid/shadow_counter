

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jun 12 16:52:57 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 2.10
    12                           ; Generated 31/07/2019 GMT
    13                           ; 
    14                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  000E                     	;# 
   121  000F                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001B                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  0081                     	;# 
   141  0085                     	;# 
   142  0086                     	;# 
   143  0087                     	;# 
   144  0088                     	;# 
   145  0089                     	;# 
   146  008C                     	;# 
   147  008D                     	;# 
   148  008E                     	;# 
   149  0091                     	;# 
   150  0092                     	;# 
   151  0093                     	;# 
   152  0094                     	;# 
   153  0098                     	;# 
   154  0099                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165                           
   166                           	psect	strings
   167  0003                     __pstrings:	
   168  0003                     stringtab:	
   169  0003                     __stringtab:	
   170  0003                     stringcode:	
   171                           ;	String table - string pointers are 1 byte each
   172                           
   173  0003                     stringdir:	
   174  0003  3000               	movlw	high stringdir
   175  0004  008A               	movwf	10
   176  0005  0804               	movf	4,w
   177  0006  0A84               	incf	4,f
   178  0007  0782               	addwf	2,f
   179  0008                     __stringbase:	
   180  0008  3400               	retlw	0
   181  0009                     __end_of__stringtab:	
   182  0009                     _SEGMENT_MAP:	
   183  0009  343F               	retlw	63
   184  000A  3406               	retlw	6
   185  000B  345B               	retlw	91
   186  000C  344F               	retlw	79
   187  000D  3466               	retlw	102
   188  000E  346D               	retlw	109
   189  000F  347D               	retlw	125
   190  0010  3407               	retlw	7
   191  0011  347F               	retlw	127
   192  0012  346F               	retlw	111
   193  0013                     __end_of_SEGMENT_MAP:	
   194  0009                     _PORTE	set	9
   195  0008                     _PORTD	set	8
   196  0007                     _PORTC	set	7
   197  0006                     _PORTB	set	6
   198  0005                     _PORTA	set	5
   199  0030                     _RB0	set	48
   200  0087                     _TRISC	set	135
   201  0088                     _TRISD	set	136
   202  0430                     _TRISB0	set	1072
   203                           
   204                           ; #config settings
   205  0000                     
   206                           	psect	cinit
   207  07F8                     start_initialization:	
   208  07F8                     __initialization:	
   209                           
   210                           ; Clear objects allocated to COMMON
   211  07F8  01F5               	clrf	__pbssCOMMON& (0+127)
   212  07F9  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   213  07FA  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   214  07FB  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   215  07FC                     end_of_initialization:	
   216                           ;End of C runtime variable initialization code
   217                           
   218  07FC                     __end_of__initialization:	
   219  07FC  0183               	clrf	3
   220  07FD  120A  118A  2F80   	ljmp	_main	;jump to C main() function
   221                           
   222                           	psect	bssCOMMON
   223  0075                     __pbssCOMMON:	
   224  0075                     _second_digit:	
   225  0075                     	ds	2
   226  0077                     _first_digit:	
   227  0077                     	ds	2
   228                           
   229                           	psect	cstackCOMMON
   230  0070                     __pcstackCOMMON:	
   231  0070                     ?_main:	
   232  0070                     ??_main:	
   233                           ; 1 bytes @ 0x0
   234                           
   235                           
   236                           ; 1 bytes @ 0x0
   237  0070                     	ds	3
   238  0073                     main@i:	
   239                           
   240                           ; 2 bytes @ 0x3
   241  0073                     	ds	2
   242                           
   243                           	psect	maintext
   244  0780                     __pmaintext:	
   245 ;;
   246 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   247 ;;
   248 ;; *************** function _main *****************
   249 ;; Defined at:
   250 ;;		line 33 in file "counter.c"
   251 ;; Parameters:    Size  Location     Type
   252 ;;		None
   253 ;; Auto vars:     Size  Location     Type
   254 ;;  i               2    3[COMMON] int 
   255 ;; Return value:  Size  Location     Type
   256 ;;                  1    wreg      void 
   257 ;; Registers used:
   258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
   259 ;; Tracked objects:
   260 ;;		On entry : B00/0
   261 ;;		On exit  : 0/0
   262 ;;		Unchanged: 0/0
   263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   264 ;;      Params:         0       0       0       0       0
   265 ;;      Locals:         2       0       0       0       0
   266 ;;      Temps:          3       0       0       0       0
   267 ;;      Totals:         5       0       0       0       0
   268 ;;Total ram usage:        5 bytes
   269 ;; Hardware stack levels used:    1
   270 ;; This function calls:
   271 ;;		Nothing
   272 ;; This function is called by:
   273 ;;		Startup code after reset
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           
   278                           ;psect for function _main
   279  0780                     _main:	
   280  0780                     l663:	
   281                           ;incstack = 0
   282                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
   283                           
   284                           
   285                           ;counter.c: 34:     PORTA = PORTB = PORTC = PORTD = PORTE = 0;
   286  0780  1283               	bcf	3,5	;RP0=0, select bank0
   287  0781  1303               	bcf	3,6	;RP1=0, select bank0
   288  0782  0189               	clrf	9	;volatile
   289  0783  0188               	clrf	8	;volatile
   290  0784  0187               	clrf	7	;volatile
   291  0785  0186               	clrf	6	;volatile
   292  0786  0185               	clrf	5	;volatile
   293  0787                     l665:	
   294                           
   295                           ;counter.c: 35:     TRISB0 = 1;
   296  0787  1683               	bsf	3,5	;RP0=1, select bank1
   297  0788  1303               	bcf	3,6	;RP1=0, select bank1
   298  0789  1406               	bsf	6,0	;volatile
   299                           
   300                           ;counter.c: 36:     TRISD = 0;
   301  078A  0188               	clrf	8	;volatile
   302                           
   303                           ;counter.c: 37:     TRISC = 0;
   304  078B  0187               	clrf	7	;volatile
   305  078C                     l667:	
   306                           
   307                           ;counter.c: 46:         if (RB0 == 1){
   308  078C  1283               	bcf	3,5	;RP0=0, select bank0
   309  078D  1303               	bcf	3,6	;RP1=0, select bank0
   310  078E  1C06               	btfss	6,0	;volatile
   311  078F  2F91               	goto	u51
   312  0790  2F92               	goto	u50
   313  0791                     u51:	
   314  0791  2FD0               	goto	l685
   315  0792                     u50:	
   316  0792                     l669:	
   317                           
   318                           ;counter.c: 47:             _delay((unsigned long)((10)*(16000000/4000.0)));
   319  0792  3034               	movlw	52
   320  0793  00F1               	movwf	??_main+1
   321  0794  30F1               	movlw	241
   322  0795  00F0               	movwf	??_main
   323  0796                     u97:	
   324  0796  0BF0               	decfsz	??_main,f
   325  0797  2F96               	goto	u97
   326  0798  0BF1               	decfsz	??_main+1,f
   327  0799  2F96               	goto	u97
   328  079A  2F9B               	nop2
   329  079B                     l671:	
   330                           
   331                           ;counter.c: 48:             if (RB0 == 1){
   332  079B  1283               	bcf	3,5	;RP0=0, select bank0
   333  079C  1303               	bcf	3,6	;RP1=0, select bank0
   334  079D  1C06               	btfss	6,0	;volatile
   335  079E  2FA0               	goto	u61
   336  079F  2FA1               	goto	u60
   337  07A0                     u61:	
   338  07A0  2FD0               	goto	l685
   339  07A1                     u60:	
   340  07A1                     l673:	
   341                           
   342                           ;counter.c: 49:                     second_digit++;
   343  07A1  3001               	movlw	1
   344  07A2  07F5               	addwf	_second_digit,f
   345  07A3  1803               	skipnc
   346  07A4  0AF6               	incf	_second_digit+1,f
   347  07A5  3000               	movlw	0
   348  07A6  07F6               	addwf	_second_digit+1,f
   349  07A7                     l675:	
   350                           
   351                           ;counter.c: 50:                     if (second_digit > 9){
   352  07A7  0876               	movf	_second_digit+1,w
   353  07A8  3A80               	xorlw	128
   354  07A9  00FF               	movwf	btemp+1
   355  07AA  3080               	movlw	128
   356  07AB  027F               	subwf	btemp+1,w
   357  07AC  1D03               	skipz
   358  07AD  2FB0               	goto	u75
   359  07AE  300A               	movlw	10
   360  07AF  0275               	subwf	_second_digit,w
   361  07B0                     u75:	
   362  07B0  1C03               	skipc
   363  07B1  2FB3               	goto	u71
   364  07B2  2FB4               	goto	u70
   365  07B3                     u71:	
   366  07B3  2FBC               	goto	l681
   367  07B4                     u70:	
   368  07B4                     l677:	
   369                           
   370                           ;counter.c: 51:                         first_digit++;
   371  07B4  3001               	movlw	1
   372  07B5  07F7               	addwf	_first_digit,f
   373  07B6  1803               	skipnc
   374  07B7  0AF8               	incf	_first_digit+1,f
   375  07B8  3000               	movlw	0
   376  07B9  07F8               	addwf	_first_digit+1,f
   377  07BA                     l679:	
   378                           
   379                           ;counter.c: 52:                         second_digit = 0;
   380  07BA  01F5               	clrf	_second_digit
   381  07BB  01F6               	clrf	_second_digit+1
   382  07BC                     l681:	
   383                           
   384                           ;counter.c: 54:                     PORTD = SEGMENT_MAP[first_digit];
   385  07BC  0877               	movf	_first_digit,w
   386  07BD  3E01               	addlw	low ((_SEGMENT_MAP-__stringbase)| (0+32768))
   387  07BE  0084               	movwf	4
   388  07BF  120A  118A  2003  120A  118A  	fcall	stringdir
   389  07C4  1283               	bcf	3,5	;RP0=0, select bank0
   390  07C5  1303               	bcf	3,6	;RP1=0, select bank0
   391  07C6  0088               	movwf	8	;volatile
   392  07C7                     l683:	
   393                           
   394                           ;counter.c: 55:                     PORTC = SEGMENT_MAP[second_digit];
   395  07C7  0875               	movf	_second_digit,w
   396  07C8  3E01               	addlw	low ((_SEGMENT_MAP-__stringbase)| (0+32768))
   397  07C9  0084               	movwf	4
   398  07CA  120A  118A  2003  120A  118A  	fcall	stringdir
   399  07CF  0087               	movwf	7	;volatile
   400  07D0                     l685:	
   401                           
   402                           ;counter.c: 58:         for (int i = 1; i<=10; i++){
   403  07D0  3001               	movlw	1
   404  07D1  00F3               	movwf	main@i
   405  07D2  3000               	movlw	0
   406  07D3  00F4               	movwf	main@i+1
   407  07D4                     l691:	
   408                           
   409                           ;counter.c: 59:                         _delay((unsigned long)((500)*(16000000/4000.0)))
      +                          ;
   410  07D4  300B               	movlw	11
   411  07D5  00F2               	movwf	??_main+2
   412  07D6  3026               	movlw	38
   413  07D7  00F1               	movwf	??_main+1
   414  07D8  305D               	movlw	93
   415  07D9  00F0               	movwf	??_main
   416  07DA                     u107:	
   417  07DA  0BF0               	decfsz	??_main,f
   418  07DB  2FDA               	goto	u107
   419  07DC  0BF1               	decfsz	??_main+1,f
   420  07DD  2FDA               	goto	u107
   421  07DE  0BF2               	decfsz	??_main+2,f
   422  07DF  2FDA               	goto	u107
   423  07E0  2FE1               	nop2
   424                           
   425                           ;counter.c: 60:                     }
   426  07E1  3001               	movlw	1
   427  07E2  07F3               	addwf	main@i,f
   428  07E3  1803               	skipnc
   429  07E4  0AF4               	incf	main@i+1,f
   430  07E5  3000               	movlw	0
   431  07E6  07F4               	addwf	main@i+1,f
   432  07E7                     l693:	
   433  07E7  0874               	movf	main@i+1,w
   434  07E8  3A80               	xorlw	128
   435  07E9  00FF               	movwf	btemp+1
   436  07EA  3080               	movlw	128
   437  07EB  027F               	subwf	btemp+1,w
   438  07EC  1D03               	skipz
   439  07ED  2FF0               	goto	u85
   440  07EE  300B               	movlw	11
   441  07EF  0273               	subwf	main@i,w
   442  07F0                     u85:	
   443  07F0  1C03               	skipc
   444  07F1  2FF3               	goto	u81
   445  07F2  2FF4               	goto	u80
   446  07F3                     u81:	
   447  07F3  2FD4               	goto	l691
   448  07F4                     u80:	
   449  07F4  2F8C               	goto	l667
   450  07F5  120A  118A  2800   	ljmp	start
   451  07F8                     __end_of_main:	
   452  007E                     btemp	set	126	;btemp
   453  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _main                                                 5     5      0      46
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jun 12 16:52:57 2020

                      pc 0002              __CFG_CP$OFF 0000                       u50 0792  
                     u51 0791                       u60 07A1                       u61 07A0  
                     u70 07B4                       u71 07B3                       u80 07F4  
                     u81 07F3                       u75 07B0                       u85 07F0  
                     u97 0796                       fsr 0004                      l671 079B  
                    l663 0780                      l681 07BC                      l673 07A1  
                    l665 0787                      l691 07D4                      l683 07C7  
                    l675 07A7                      l667 078C                      l693 07E7  
                    l677 07B4                      l669 0792                      l685 07D0  
                    l679 07BA                      _RB0 0030                      u107 07DA  
           __CFG_CPD$OFF 0000                      fsr0 0004             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000             __CFG_WRT$OFF 0000                     _main 0780  
                   btemp 007E                     start 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISC 0087                    _TRISD 0088                    main@i 0073  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07F8             __end_of_main 07F8  
                 ??_main 0070                   _TRISB0 0430           __CFG_PWRTE$OFF 0000  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0780  
             __stringtab 0003     end_of_initialization 07FC      start_initialization 07F8  
            __pbssCOMMON 0075                ___latbits 0002                __pstrings 0003  
    __end_of_SEGMENT_MAP 0013              __stringbase 0008              _first_digit 0077  
           _second_digit 0075       __end_of__stringtab 0009              _SEGMENT_MAP 0009  
          __size_of_main 0078                stringcode 0003                 stringdir 0003  
               stringtab 0003  
